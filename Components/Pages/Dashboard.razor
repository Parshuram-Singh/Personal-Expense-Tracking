@page "/dashboard"
@using Personal_Expense_Tracking.ViewModels
@using Personal_Expense_Tracking.Models
@inject NavigationManager NavigationManager

<MudContainer Class="mt-5" MaxWidth="MaxWidth.False">
    <h3>Dashboard</h3>

    <!-- Dashboard Stats (Total Balance, Income, Expense, Pending Debts) -->
    <MudGrid class="mt-5" Justify="Justify.SpaceBetween">
        <MudItem xs="12" sm="6" md="3">
            <MudPaper Class="border-solid border-2 mud-border-primary pa-4 rounded-tl-xl" Elevation="2">
                <div class="mud-theme-info py-4 px-6 mx-4 rounded-tl-xl">
                    <MudText Align="Align.Center">Total Balance</MudText>
                    <MudText Typo="Typo.h6" Align="Align.Center">$@account.Balance</MudText>
                </div>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudPaper Class="border-solid border-2 mud-border-primary pa-4 rounded-tr-xl" Elevation="2">
                <div class="mud-theme-tertiary py-4 px-6 mx-4 rounded-tr-xl">
                    <MudText Align="Align.Center">Income</MudText>
                    <MudText Typo="Typo.h6" Align="Align.Center">$@account.TotalCredit</MudText>
                </div>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudPaper Class="border-solid border-2 mud-border-primary pa-4 rounded-br-xl" Elevation="2">
                <div class="mud-theme-secondary py-4 px-6 mx-4 rounded-br-xl">
                    <MudText Align="Align.Center">Expense</MudText>
                    <MudText Typo="Typo.h6" Align="Align.Center">$@account.TotalDebit</MudText>
                </div>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudPaper Class="border-solid border-2 mud-border-primary pa-4 rounded-bl-xl" Elevation="2">
                <div class="mud-theme-primary py-4 px-6 mx-4 rounded-bl-xl">
                    <MudText Align="Align.Center">Pending Debts</MudText>
                    <MudText Typo="Typo.h6" Align="Align.Center">$@account.TotalDebt</MudText>
                </div>
            </MudPaper>
        </MudItem>
    </MudGrid>

    <!-- Transaction List Section -->
    <MudGrid class="mt-5">
        <MudItem xs="12">
            <MudPaper Elevation="2" Class="p-4">
                <h3 class="text-center mb-4">Transaction List</h3>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Date</th>
                                <th>Notes</th>
                                <th>Type</th>
                                <th>Tags</th>
                                <th>Amount</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var transaction in transactionsViewModel.AllTransactions)
                            {
                                <tr>
                                    <td>@transaction.Id</td>
                                    <td>@transaction.Date.ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>@transaction.Notes</td>
                                    <td>@transaction.Type</td>
                                    <td>@transaction.Tag</td>
                                    <td>@transaction.Amount.ToString("C")</td>
                                    <td>@transaction.Status</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private Account account = new Account();
    private List<Transactions> transactions;
    private TransactionsViewModel transactionsViewModel = new TransactionsViewModel();

    // Define the StatusMessage variable
    private string? StatusMessage;

    protected override async Task OnInitializedAsync()
    {
        // Fetch transactions and account totals
        transactions = await transactionsViewModel.GetTransactions();
        await GetDashboardTotals();
    }

    private async Task GetDashboardTotals()
    {
        // Fetch totals from the ViewModel
        account.TotalCredit = await transactionsViewModel.GetTotalInflow();
        account.TotalDebit = await transactionsViewModel.GetTotalOutflow();
        account.Balance = await transactionsViewModel.GetTotalBalance();
        //account.TotalDebt = account.TotalDebit - account.TotalCredit;
    }

    private void NavigateToTransactionPage()
    {
        // Navigate to the transaction page
        NavigationManager.NavigateTo("/transaction");
    }
}
